// DO NOT EDIT! This file is generated by vewmill.
// See https://github.com/apleshkov/viewmill for the details.
/* eslint-disable */
// @ts-nocheck
import * as viewmill from "viewmill-runtime";
import { Item, Sorting } from "./data";
export type Column = {
    key: string;
    title: string;
    sortable?: boolean;
    render?: (item: Item) => any;
};
export default function(cols: Column[], loading = true, results: Item[] = [], error?: unknown, page = 1, limit = 10, total = 0, sorting?: Sorting) {
    return viewmill.view({
        cols: viewmill.param(cols),
        loading: viewmill.param(loading),
        results: viewmill.param(results),
        error: viewmill.param(error),
        page: viewmill.param(page),
        limit: viewmill.param(limit),
        total: viewmill.param(total),
        sorting: viewmill.param(sorting)
    }, ({
        cols,
        loading,
        results,
        error,
        page,
        limit,
        total,
        sorting
    }, unmountSignal)=>{
        const showPagination = viewmill.live(()=>(total.getValue() > 0 && limit.getValue() > 0 && total.getValue() > limit.getValue()), [
            total,
            limit
        ], null, unmountSignal);
        const pageCount = viewmill.live(()=>(limit.getValue() > 0 ? Math.ceil(total.getValue() / limit.getValue()) : 0), [
            limit,
            total
        ], null, unmountSignal);
        const placeholder = viewmill.live(()=>(Array.from({
                length: limit.getValue()
            }).map(()=>(viewmill.el("<tr><!></tr>", (container, unmountSignal1)=>{
                    const tr__1 = container.firstChild;
                    const anchor__1 = tr__1.firstChild;
                    viewmill.unmountOn(unmountSignal1, viewmill.insert(viewmill.expr(()=>(Array.from({
                            length: cols.getValue().length
                        }).map(()=>(viewmill.el('<td class="placeholder-glow"><span class="placeholder w-100"></span></td>')))), [
                        cols
                    ]), tr__1, anchor__1));
                })))), [
            limit
        ], null, unmountSignal);
        return (viewmill.el('<div class="position-relative"><div><!></div><table class="table"><thead><tr><!></tr></thead><tbody><!></tbody></table><div data-pagination><div><ul class="pagination"><!></ul></div></div></div>', (container, unmountSignal1)=>{
            const div__1 = container.firstChild;
            const div__2 = div__1.firstChild;
            viewmill.attr(div__2, "class", ()=>(`alert alert-danger mb-3 ${error.getValue() ? "" : "d-none"}`), [
                error
            ], unmountSignal1);
            const anchor__1 = div__2.firstChild;
            viewmill.unmountOn(unmountSignal1, viewmill.insert(viewmill.expr(()=>(error.getValue()), [
                error
            ]), div__2, anchor__1));
            const table__1 = div__2.nextSibling;
            const thead__1 = table__1.firstChild;
            const tr__1 = thead__1.firstChild;
            const anchor__2 = tr__1.firstChild;
            viewmill.unmountOn(unmountSignal1, viewmill.insert(viewmill.list(()=>(cols.getValue().map(({ key, title, sortable })=>{
                    return viewmill.el("<th><!></th>", (container1, unmountSignal2)=>{
                        const th__1 = container1.firstChild;
                        const anchor__2 = th__1.firstChild;
                        viewmill.unmountOn(unmountSignal2, viewmill.insert(sortable ? viewmill.el('<a href="#"><!><!></a>', (container2, unmountSignal3)=>{
                            const a__1 = container2.firstChild;
                            viewmill.attr(a__1, "data-col", key);
                            const anchor__2 = a__1.firstChild;
                            viewmill.unmountOn(unmountSignal3, viewmill.insert(title, a__1, anchor__2));
                            const anchor__3 = anchor__2.nextSibling;
                            viewmill.unmountOn(unmountSignal3, viewmill.insert(viewmill.cond(()=>(sorting.getValue() && sorting.getValue().field === key), ()=>((sorting.getValue().order === "asc" ? " ↑" : " ↓")), ()=>(null), [
                                sorting
                            ]), a__1, anchor__3));
                        }) : title, th__1, anchor__2));
                    });
                })), [
                cols
            ]), tr__1, anchor__2));
            const tbody__1 = thead__1.nextSibling;
            const anchor__3 = tbody__1.firstChild;
            viewmill.unmountOn(unmountSignal1, viewmill.insert(viewmill.cond(()=>(loading.getValue()), ()=>(placeholder.getValue()), ()=>([
                    viewmill.list(()=>(results.getValue().map((record)=>(viewmill.el("<tr><!></tr>", (container1, unmountSignal2)=>{
                                const tr__2 = container1.firstChild;
                                const anchor__3 = tr__2.firstChild;
                                viewmill.unmountOn(unmountSignal2, viewmill.insert(viewmill.list(()=>(cols.getValue().map(({ key, render })=>(viewmill.el("<td><!></td>", (container2, unmountSignal3)=>{
                                            const td__1 = container2.firstChild;
                                            const anchor__3 = td__1.firstChild;
                                            viewmill.unmountOn(unmountSignal3, viewmill.insert(render ? render(record) : record[key], td__1, anchor__3));
                                        })))), [
                                    cols
                                ]), tr__2, anchor__3));
                            })))), [
                        results
                    ])
                ]), [
                loading,
                placeholder
            ]), tbody__1, anchor__3));
            const div__3 = table__1.nextSibling;
            viewmill.attr(div__3, "class", ()=>(`d-flex justify-content-center ${showPagination.getValue() ? "" : "d-none"}`), [
                showPagination
            ], unmountSignal1);
            const div__4 = div__3.firstChild;
            const ul__1 = div__4.firstChild;
            const anchor__4 = ul__1.firstChild;
            viewmill.unmountOn(unmountSignal1, viewmill.insert(viewmill.list(()=>(Array.from({
                    length: pageCount.getValue()
                }, (_, i)=>i + 1).map((p)=>{
                    return (viewmill.el('<li><a href="#" class="page-link"><!></a></li>', (container1, unmountSignal2)=>{
                        const li__1 = container1.firstChild;
                        viewmill.attr(li__1, "class", ()=>(`page-item ${p === page.getValue() ? "disabled" : ""}`), [
                            page
                        ], unmountSignal2);
                        const a__1 = li__1.firstChild;
                        viewmill.attr(a__1, "data-page", p);
                        const anchor__4 = a__1.firstChild;
                        viewmill.unmountOn(unmountSignal2, viewmill.insert(p, a__1, anchor__4));
                    }));
                })), [
                pageCount
            ]), ul__1, anchor__4));
        }));
    });
};
